# -*- coding: utf-8 -*-
"""F.A.C.T. (Linear Model)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FHhsfzq9YPJ00eKzTECCAQwxDhP3beEg
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import LinearSVC
from sklearn.metrics import accuracy_score, classification_report

#Reads Data.
data = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/news.csv")
#Merges Title and Text into one and then seperated it into training and testing data.
x,y=data[['title','text']],data['label']
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2, random_state =40)
#Uses TF-IDF to vectorize the entire corpus and removes stop words.
vectorizer = TfidfVectorizer(stop_words="english",max_df=0.7)
x_train_vectorized = vectorizer.fit_transform(x_train['title'] + ' ' + x_train['text'])
x_test_vectorized = vectorizer.transform(x_test['title'] + ' ' + x_test['text'])
#Runs the M.L Model
clf = LinearSVC()
clf.fit(x_train_vectorized,y_train)
#Prints the Report on Accuracy,Precsion,Recall,F1 Score etc..
y_pred = clf.predict(x_test_vectorized)
print('Classification Report:')
print(classification_report(y_test, y_pred))
#Takes input from user with certain word requirements
while True:
  new_article_title = input("Enter the title of the article longer than 3 words: ")
  if len(new_article_title.split()) >= 3:
    break
while True:
  new_article_text = input("Enter the text of the article longer than 30 words: ")
  if len(new_article_text.split()) >= 30:
    break
#Vectorizes the Text Input and Runs the Model.
new_article_tfidf = vectorizer.transform([new_article_title + ' ' + new_article_text])
prediction = clf.predict(new_article_tfidf)
#Prints the Prediction.
print(f'Prediction for the new article: {prediction[0]}')

from google.colab import drive
drive.mount('/content/drive')