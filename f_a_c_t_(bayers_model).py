# -*- coding: utf-8 -*-
"""F.A.C.T. (Bayers Model)

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1m75z883cfdPKOuwSfPC7BARX1AZEwE4b
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report


news = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/news.csv')

x = news[['title', 'text']]  # Combining title and text into a single feature
y = news['label']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

tfidf_vectorizer = TfidfVectorizer(stop_words='english')
x_train_tfidf = tfidf_vectorizer.fit_transform(x_train['title'] + ' ' + x_train['text'])
x_test_tfidf = tfidf_vectorizer.transform(x_test['title'] + ' ' + x_test['text'])

# Training the model
classifier = MultinomialNB()
classifier.fit(x_train_tfidf, y_train)

# Evaluating the performance of the model
y_pred = classifier.predict(x_test_tfidf)

print('Classification Report:')
print(classification_report(y_test, y_pred))

# Use the model for predictions
new_article_title = input("Enter the title of the new article: ")
while True:
  new_article_text = input("Enter the text of the new article longer than 30 words: ")
  if len(new_article_text.split()) >= 30:
    break

new_article_tfidf = tfidf_vectorizer.transform([new_article_title + ' ' + new_article_text])
prediction = classifier.predict(new_article_tfidf)

print(f'Prediction for the new article: {prediction[0]}')

from google.colab import drive
drive.mount('/content/drive')